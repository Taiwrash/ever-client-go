package main

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"log"
	"os"

	goton "github.com/move-ton/ton-client-go"
)

func main() {
	config, err := goton.ParseConfigFile("config.toml")
	if err != nil {
		log.Println("Error read config file, err: . Settings setup on default.", err)
		config = goton.NewConfig(0)
	}

	config.Network.ServerAddress = goton.Chains[1]
	client, err := goton.InitClient(config)
	if err != nil {
		log.Fatal("Init client error", err)
	}
	defer client.Destroy()

	acc := ""

	file, err := os.Open("FreeTonContest.abi.json")
	if err != nil {
		fmt.Println("Error 1 open: ", err)
		return
	}

	abiByte, err := ioutil.ReadAll(file)
	if err != nil {
		fmt.Println("Error 2 read file abi: ", err)
		return
	}

	ggA := goton.AbiContract{}
	json.Unmarshal(abiByte, &ggA)

	pOEM := goton.ParamsOfEncodeMessage{Abi: goton.AbiS{Type: goton.TypeS, Value: ggA}, Address: "0:3d118a1e51c708610d2216d2f2c88ccb89ac9d05a5687ab9b335ce9c4f530d0c", CallSet: &goton.CallSet{FunctionName: "listContenders"}, Signer: goton.SignerNone{Type: goton.SignNone}, ProcessingTryIndex: 0}
	idMessage := client.EncodeMessage(pOEM)
	message, err := client.GetResp(idMessage)
	if err != nil {
		fmt.Println("err: ", err)
		return
	}

	idRunTvm := client.RunTvm(goton.ParamsOfRunTvm{Message: message.(goton.ResultOfEncodeMessage).Message, Account: acc, Abi: goton.AbiS{Type: goton.TypeS, Value: ggA}})
	value, err := client.GetResp(idRunTvm)
	if err != nil {
		fmt.Println("err runTVM: ", err)
		return
	}

	valStr := value.(goton.ResultOfRunTvm)
	fmt.Println(" outM: ", valStr.Decoded)

}

// func main() {
// 	config, err := goton.ParseConfigFile("config.toml")
// 	if err != nil {
// 		log.Println("Error read config file, err: . Settings setup on default.", err)
// 		config = goton.NewConfig(0)
// 	}

// 	config.Network.ServerAddress = goton.Chains[1]
// 	client, err := goton.InitClient(config)
// 	if err != nil {
// 		log.Fatal("Init client error", err)
// 	}
// 	defer client.Destroy()

// 	reqID := client.RunGet(goton.ParamsOfRunGet{Account: acc, FunctionName: "getFinalContestStats"})

// 	rr, err := client.GetResp(reqID)
// 	if err != nil {
// 		fmt.Println(err)
// 	}
// 	fmt.Println(rr)
// }
